@using PeopleOps.Web.Contracts
@code {
    [Parameter] public List<QuestTableResponse> MainQuests { get; set; } = new();
    [Parameter] public List<QuestTableResponse> SideQuests { get; set; } = new();
    [Parameter] public EventCallback InitializeQuests { get; set; }
    [Parameter] public EventCallback<QuestTableResponse> SetQuestAsInProgress { get; set; }
    [Parameter] public EventCallback<QuestTableResponse> CancelQuest { get; set; }
    [Parameter] public EventCallback<QuestTableResponse> CompleteQuest { get; set; }
    [Parameter] public bool IsLoading { get; set; }
}

@if (MainQuests.Count == 0 && SideQuests.Count == 0)
{
    <FluentStack Orientation="Orientation.Vertical"
                 VerticalAlignment="VerticalAlignment.Center"
                 VerticalGap="2" Style="padding:1rem;"
                 HorizontalAlignment="HorizontalAlignment.Center">
        <FluentLabel Typo="Typography.H6" Alignment="HorizontalAlignment.Center"
                     Style="margin-bottom:15px;">
            Are you ready to take on the day?
        </FluentLabel>
        <FluentButton OnClick="InitializeQuests"
                      IconEnd="@(new Icons.Regular.Size16.CalendarCheckmark())"
                      Appearance="Appearance.Accent">
            I'm ready!
        </FluentButton>
    </FluentStack>
}
else
{
    <FluentStack HorizontalAlignment="HorizontalAlignment.Center"
                 Orientation="Orientation.Horizontal"
                 Style="margin-top:1rem;" HorizontalGap="3">
        <FluentLabel Typo="Typography.H6" Alignment="HorizontalAlignment.Center">
            Main Quests
        </FluentLabel>
        <FluentEmoji Value="@(new Emojis.PeopleBody.Color.Default.PersonClimbing())"
                     Width="18"/>
    </FluentStack>
    <FluentDivider Orientation="Orientation.Horizontal"></FluentDivider>

    <FluentAccordion ExpandMode="AccordionExpandMode.Multi">
        @foreach (var quest in MainQuests)
        {
            <FluentAccordionItem HeadingLevel="1" Heading="@quest.QuestName">
                <div slot="end">
                    <FluentStack HorizontalGap="3" Style="padding:3px;"
                                 Orientation="Orientation.Horizontal"
                                 VerticalAlignment="VerticalAlignment.Center">
                        <FluentBadge Circular=true Appearance="Appearance.Neutral">
                            <img alt="" width="16" class="h-10 max-w-full"
                                 src="/assets/media/images/gamer-coin.svg">
                            <FluentLabel Typo="Typography.H6" Style="color:darkgoldenrod;">
                                @quest.QuestPoints
                            </FluentLabel>
                        </FluentBadge>
                        @if (quest.CompletionStatus)
                        {
                            <FluentBadge Circular=true Appearance="Appearance.Accent">
                                In Progress
                            </FluentBadge>
                        }
                    </FluentStack>
                </div>
                <FluentStack Orientation="Orientation.Vertical"
                             VerticalAlignment="VerticalAlignment.Center"
                             HorizontalAlignment="HorizontalAlignment.Center" VerticalGap="3">
                    <div>
                        @quest.QuestDescription
                    </div>
                    @if (!quest.CompletionStatus)
                    {
                        <FluentButton OnClick="() => SetQuestAsInProgress.InvokeAsync(quest)"
                                      IconEnd="@(new Icons.Filled.Size16.ArrowCircleRight())"
                                      Appearance="Appearance.Accent" Loading="IsLoading">
                            Start Quest
                        </FluentButton>
                    }
                    @if (quest is { CompletionStatus: true, CompletionDate: null })
                    {
                        <FluentStack Orientation="Orientation.Horizontal" HorizontalGap="5"
                                     HorizontalAlignment="HorizontalAlignment.Center"
                                     Style="padding:10px;">
                            <FluentButton IconEnd="@(new Icons.Filled.Size16.CheckmarkCircle())"
                                          Appearance="Appearance.Accent" Loading="IsLoading">
                                Complete Quest
                            </FluentButton>

                            <FluentButton IconEnd="@(new Icons.Filled.Size16.ArrowRedo())"
                                          OnClick="() => CancelQuest.InvokeAsync(quest)"
                                          Appearance="Appearance.Outline" Color="darkred"
                                          Loading="IsLoading">
                                Cancel Quest
                            </FluentButton>
                        </FluentStack>
                    }
                </FluentStack>
            </FluentAccordionItem>
        }
    </FluentAccordion>
    <FluentStack HorizontalAlignment="HorizontalAlignment.Center"
                 Orientation="Orientation.Horizontal"
                 Style="margin-top:1rem;" HorizontalGap="3">
        <FluentLabel Typo="Typography.H6" Alignment="HorizontalAlignment.Center">
            Side Quests
        </FluentLabel>
        <FluentEmoji Value="@(new Emojis.Objects.Color.Default.GemStone())"
                     Width="18"/>
    </FluentStack>
    <FluentDivider Orientation="Orientation.Horizontal"></FluentDivider>
    <FluentAccordion ExpandMode="AccordionExpandMode.Multi">
        @foreach (var quest in SideQuests)
        {
            <FluentAccordionItem HeadingLevel="1" Heading="@quest.QuestName">
                <div slot="end">
                    <FluentStack HorizontalGap="3" Style="padding:3px;"
                                 Orientation="Orientation.Horizontal"
                                 VerticalAlignment="VerticalAlignment.Center">
                        <FluentBadge Circular=true Appearance="Appearance.Neutral">
                            <img alt="" width="16" class="h-10 max-w-full"
                                 src="/assets/media/images/gamer-coin.svg">
                            <FluentLabel Typo="Typography.H6" Style="color:darkgoldenrod;">
                                @quest.QuestPoints
                            </FluentLabel>
                        </FluentBadge>
                        @if (quest.CompletionStatus)
                        {
                            <FluentBadge Circular=true Appearance="Appearance.Accent">
                                In Progress
                            </FluentBadge>
                        }
                    </FluentStack>
                </div>
                <FluentStack Orientation="Orientation.Vertical"
                             VerticalAlignment="VerticalAlignment.Center"
                             HorizontalAlignment="HorizontalAlignment.Center" VerticalGap="3">
                    <div>
                        @quest.QuestDescription
                    </div>
                    @if (!quest.CompletionStatus)
                    {
                        <FluentButton OnClick="() => SetQuestAsInProgress.InvokeAsync(quest)"
                                      IconEnd="@(new Icons.Filled.Size16.ArrowCircleRight())"
                                      Appearance="Appearance.Accent">
                            Start Quest
                        </FluentButton>
                    }
                    @if (quest is { CompletionStatus: true, CompletionDate: null })
                    {
                        <FluentStack Orientation="Orientation.Horizontal" HorizontalGap="5"
                                     HorizontalAlignment="HorizontalAlignment.Center"
                                     Style="padding:10px;">
                            <FluentButton IconEnd="@(new Icons.Filled.Size16.CheckmarkCircle())"
                                          Appearance="Appearance.Accent">
                                Complete Quest
                            </FluentButton>

                            <FluentButton IconEnd="@(new Icons.Filled.Size16.ArrowRedo())"
                                          OnClick="() => CancelQuest.InvokeAsync(quest)"
                                          Appearance="Appearance.Outline" Color="darkred">
                                Cancel Quest
                            </FluentButton>
                        </FluentStack>
                    }
                </FluentStack>
            </FluentAccordionItem>
        }
    </FluentAccordion>
}