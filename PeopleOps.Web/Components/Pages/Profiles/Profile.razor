@page "/profile"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@rendermode InteractiveServer

<PageTitle>Profile</PageTitle>

<FluentStack Orientation="Orientation.Vertical" VerticalAlignment="VerticalAlignment.Center"
             HorizontalAlignment="HorizontalAlignment.Center">
    <FluentStack Class="hero-bg" VerticalGap="15" Orientation="Orientation.Vertical"
                 HorizontalAlignment="HorizontalAlignment.Center" Style="background-image: url('assets/media/images/bg-1.png');
    background-repeat: no-repeat;
    background-size: cover;
    background-position:50%; padding-top:1.5em; padding-bottom:1em;">
        <div>
            <FluentPersona Name=""
                           Status="PresenceStatus.Available"
                           StatusSize="PresenceBadgeSize.Large"
                           StatusTitle="He is available"
                           Image="@ProfileResponse?.GetAvatar"
                           ImageSize="100px">
            </FluentPersona>
        </div>
        <div>
            <FluentLabel Alignment="HorizontalAlignment.Center" Style="font-size: 1.6em; font-weight: 500;">
                @if (IsLoadingData)
                {
                    <FluentProgressRing Width="22px" Stroke="ProgressStroke.Small"/>
                }
                else
                {
                    @ProfileResponse?.FullName
                    <svg class="text-primary" style="color: var(--accent-fill-rest)" fill="none" height="16"
                         viewBox="0 0 15 16" width="15" xmlns="http://www.w3.org/2000/svg">
                        <path
                            d="M14.5425 6.89749L13.5 5.83999C13.4273 5.76877 13.3699 5.6835 13.3312 5.58937C13.2925 5.49525 13.2734 5.39424 13.275 5.29249V3.79249C13.274 3.58699 13.2324 3.38371 13.1527 3.19432C13.0729 3.00494 12.9565 2.83318 12.8101 2.68892C12.6638 2.54466 12.4904 2.43073 12.2998 2.35369C12.1093 2.27665 11.9055 2.23801 11.7 2.23999H10.2C10.0982 2.24159 9.99722 2.22247 9.9031 2.18378C9.80898 2.1451 9.72371 2.08767 9.65249 2.01499L8.60249 0.957487C8.30998 0.665289 7.91344 0.50116 7.49999 0.50116C7.08654 0.50116 6.68999 0.665289 6.39749 0.957487L5.33999 1.99999C5.26876 2.07267 5.1835 2.1301 5.08937 2.16879C4.99525 2.20747 4.89424 2.22659 4.79249 2.22499H3.29249C3.08699 2.22597 2.88371 2.26754 2.69432 2.34731C2.50494 2.42709 2.33318 2.54349 2.18892 2.68985C2.04466 2.8362 1.93073 3.00961 1.85369 3.20013C1.77665 3.39064 1.73801 3.5945 1.73999 3.79999V5.29999C1.74159 5.40174 1.72247 5.50275 1.68378 5.59687C1.6451 5.691 1.58767 5.77627 1.51499 5.84749L0.457487 6.89749C0.165289 7.19 0.00115967 7.58654 0.00115967 7.99999C0.00115967 8.41344 0.165289 8.80998 0.457487 9.10249L1.49999 10.16C1.57267 10.2312 1.6301 10.3165 1.66878 10.4106C1.70747 10.5047 1.72659 10.6057 1.72499 10.7075V12.2075C1.72597 12.413 1.76754 12.6163 1.84731 12.8056C1.92709 12.995 2.04349 13.1668 2.18985 13.3111C2.3362 13.4553 2.50961 13.5692 2.70013 13.6463C2.89064 13.7233 3.0945 13.762 3.29999 13.76H4.79999C4.90174 13.7584 5.00275 13.7775 5.09687 13.8162C5.191 13.8549 5.27627 13.9123 5.34749 13.985L6.40499 15.0425C6.69749 15.3347 7.09404 15.4988 7.50749 15.4988C7.92094 15.4988 8.31748 15.3347 8.60999 15.0425L9.65999 14C9.73121 13.9273 9.81647 13.8699 9.9106 13.8312C10.0047 13.7925 10.1057 13.7734 10.2075 13.775H11.7075C12.1212 13.775 12.518 13.6106 12.8106 13.3181C13.1031 13.0255 13.2675 12.6287 13.2675 12.215V10.715C13.2659 10.6132 13.285 10.5122 13.3237 10.4181C13.3624 10.324 13.4198 10.2387 13.4925 10.1675L14.55 9.10999C14.6953 8.96452 14.8104 8.79176 14.8887 8.60164C14.9671 8.41152 15.007 8.20779 15.0063 8.00218C15.0056 7.79656 14.9643 7.59311 14.8847 7.40353C14.8051 7.21394 14.6888 7.04197 14.5425 6.89749ZM10.635 6.64999L6.95249 10.25C6.90055 10.3026 6.83864 10.3443 6.77038 10.3726C6.70212 10.4009 6.62889 10.4153 6.55499 10.415C6.48062 10.4139 6.40719 10.3982 6.33896 10.3685C6.27073 10.3389 6.20905 10.2961 6.15749 10.2425L4.37999 8.44249C4.32532 8.39044 4.28169 8.32793 4.25169 8.25867C4.22169 8.18941 4.20593 8.11482 4.20536 8.03934C4.20479 7.96387 4.21941 7.88905 4.24836 7.81934C4.27731 7.74964 4.31999 7.68647 4.37387 7.63361C4.42774 7.58074 4.4917 7.53926 4.56194 7.51163C4.63218 7.484 4.70726 7.47079 4.78271 7.47278C4.85816 7.47478 4.93244 7.49194 5.00112 7.52324C5.0698 7.55454 5.13148 7.59935 5.18249 7.65499L6.56249 9.05749L9.84749 5.84749C9.95296 5.74215 10.0959 5.68298 10.245 5.68298C10.394 5.68298 10.537 5.74215 10.6425 5.84749C10.6953 5.90034 10.737 5.96318 10.7653 6.03234C10.7935 6.1015 10.8077 6.1756 10.807 6.25031C10.8063 6.32502 10.7908 6.39884 10.7612 6.46746C10.7317 6.53608 10.6888 6.59813 10.635 6.64999Z"
                            fill="currentColor">
                        </path>
                    </svg>
                }
            </FluentLabel>
        </div>
        <FluentStack Orientation="Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Center"
                     HorizontalAlignment="HorizontalAlignment.Center">
            @if (IsLoadingData)
            {
                <FluentProgressRing Width="22px" Stroke="ProgressStroke.Small"/>
            }
            else
            {
                @if (ProfileResponse?.IsProfileIncomplete == true)
                {
                    <FluentButton Appearance="Appearance.Accent" Style="font-weight:500; font-size:small;"
                                  @onclick="OpenCompleteProfileModalAsync">
                        Complete your profile
                    </FluentButton>
                }
                else
                {
                    <FluentLabel Color="Color.Custom" CustomColor="grey" Weight="FontWeight.Bold">
                        <FluentIcon Color="Color.Accent" Value="@(new Icons.Filled.Size12.Location())"/>
                        <span> PH, @ProfileResponse?.CityAddress </span>
                    </FluentLabel>
                    <FluentLabel Color="Color.Custom" CustomColor="grey" Weight="FontWeight.Bold">
                        <FluentIcon Value="@(new Icons.Filled.Size12.PersonCircle())"/>
                        <span> @ProfileResponse?.JobTitle </span>
                    </FluentLabel>
                }
            }
        </FluentStack>
    </FluentStack>
</FluentStack>

<FluentGrid Spacing="1" Justify="JustifyContent.Center" Style=" padding: 4px;">
    <FluentGridItem xxl="8" xl="8" lg="8" xs="12">
        <div class="card">
            <FluentTabs Size="TabSize.Large">
                <div slot="end">
                    <FluentCounterBadge Count="10" BackgroundColor="@Color.Error" Color="Color.Fill">
                        <ChildContent>
                            <FluentButton @onclick="@OpenQuestCenterDialogAsync"
                                          Style="font-weight:500; font-size:small;">
                                Quest Center
                            </FluentButton>
                        </ChildContent>
                        <BadgeTemplate>New📃!</BadgeTemplate>
                    </FluentCounterBadge>
                </div>
                <FluentTab Label="Home" Icon="@(new Icons.Regular.Size32.Home())" Id="tab-1">
                    <FluentCard
                                Style="margin-top:1.5em; box-shadow: 0 3px 4px 0 rgba(0, 0, 0, .03) !important;border-radius: .75rem !important; border: 1px solid  #f1f1f4; !important;">
                        <FluentStack Orientation="Orientation.Horizontal"
                                     HorizontalAlignment="HorizontalAlignment.Center"
                                     VerticalAlignment="VerticalAlignment.Center"
                                     HorizontalGap="15" VerticalGap="2"
                                     Style="">
                            <FluentHorizontalScroll Speed="600" View="HorizontalScrollView.Mobile" Easing=ScrollEasing.EaseInOut>
                                <FluentGrid Spacing="2" Justify="JustifyContent.SpaceEvenly"
                                            Style="padding-left: 10px; padding-right: 10px;">
                                    <FluentGridItem xs="12" md="3" Justify="JustifyContent.Center">
                                        <img alt="" width="40" class="h-10 max-w-full"
                                             src="/assets/media/images/gamer-coin.svg">
                                    </FluentGridItem>
                                    <FluentGridItem xs="12" md="9">
                                        <FluentLabel Typo="Typography.H2">
                                            @if (IsLoadingData)
                                            {
                                                <FluentProgressRing Width="22px" Stroke="ProgressStroke.Small"/>
                                            }
                                            else
                                            {
                                                if (MonthlyPoints.IsSuccess)
                                                {
                                                    @MonthlyPoints.Value.AvailableCoins
                                                }
                                                else
                                                {
                                                    <span>@MonthlyPoints.Errors.First().Message</span>
                                                }
                                            }
                                        </FluentLabel>
                                        <FluentLabel Color="Color.Custom" CustomColor="grey" Style="font-weight:500;">
                                            Available Coins
                                        </FluentLabel>
                                    </FluentGridItem>
                                </FluentGrid>
                                <FluentSpacer/>
                                <FluentDivider Style="height: 50px;" Role=DividerRole.Presentation
                                               Orientation="Orientation.Vertical"></FluentDivider>
                                <FluentGrid Spacing="2" Justify="JustifyContent.SpaceEvenly"
                                            Style="padding-left: 10px; padding-right: 10px;">
                                    <FluentGridItem xs="12" md="3" Justify="JustifyContent.Center">
                                        <img alt="" width="40" class="h-10 max-w-full"
                                             src="/assets/media/images/gamer-coin.svg">
                                    </FluentGridItem>
                                    <FluentGridItem xs="12" md="9">
                                        <FluentLabel Typo="Typography.H2">
                                            @if (IsLoadingData)
                                            {
                                                <FluentProgressRing Width="22px" Stroke="ProgressStroke.Small"/>
                                            }
                                            else
                                            {
                                                @TotalLedgerPointsBalance
                                            }
                                        </FluentLabel>
                                        <FluentLabel Color="Color.Custom" CustomColor="grey" Style="font-weight:500;">
                                            Redeemable Coins
                                        </FluentLabel>
                                    </FluentGridItem>
                                </FluentGrid>
                                <FluentSpacer/>
                                <FluentDivider Style="height: 50px;" Role="DividerRole.Presentation"
                                               Orientation="Orientation.Vertical"></FluentDivider>
                                <FluentGrid Spacing="2" Style="padding-left: 10px; padding-right: 10px;">
                                    <FluentGridItem md="3" xs="12" Justify="JustifyContent.Center">
                                        <img alt="" width="40" class="h-10 max-w-full"
                                             src="/assets/media/images/gamer-diamond.svg">
                                    </FluentGridItem>
                                    <FluentGridItem md="9" xs="12">
                                        <FluentLabel Typo="Typography.H2">
                                            @if (IsLoadingData)
                                            {
                                                <FluentProgressRing Width="22px" Stroke="ProgressStroke.Small"/>
                                            }
                                            else
                                            {
                                                @TotalCompletedQuests
                                            }
                                        </FluentLabel>
                                        <FluentLabel Color="Color.Custom" CustomColor="grey" Style="font-weight:500;">
                                            Quests
                                            Completed
                                        </FluentLabel>
                                    </FluentGridItem>
                                </FluentGrid>
                                <FluentSpacer/>
                                <FluentDivider Style="height: 50px;" Role="DividerRole.Presentation"
                                               Orientation="Orientation.Vertical"></FluentDivider>
                                <FluentGrid Spacing="2" Style="padding-left: 10px; padding-right: 10px;">
                                    <FluentGridItem xs="12" md="3" Justify="JustifyContent.Center">
                                        <img alt="" width="40" class="h-10 max-w-full"
                                             src="/assets/media/images/gamer-trophy.svg">
                                    </FluentGridItem>
                                    <FluentGridItem xs="12" md="9">
                                        <FluentLabel Typo="Typography.H2">
                                            @if (IsLoadingData)
                                            {
                                                <FluentProgressRing Width="22px" Stroke="ProgressStroke.Small"/>
                                            }
                                            else
                                            {
                                                @TotalTrophies
                                            }
                                        </FluentLabel>
                                        <FluentLabel Color="Color.Custom" CustomColor="grey" Style="font-weight:500;">
                                            Trophies
                                        </FluentLabel>
                                    </FluentGridItem>
                                </FluentGrid>
                            </FluentHorizontalScroll>
                        </FluentStack>
                    </FluentCard>

                    <FluentGrid Spacing="3" Style="margin-top:2rem;" Justify="JustifyContent.FlexStart">
                        <FluentGridItem xs="3" sm="4" HiddenWhen="GridItemHidden.SmAndDown">
                            <FluentStack Orientation="Orientation.Vertical" VerticalAlignment="VerticalAlignment.Center"
                                         HorizontalAlignment="HorizontalAlignment.Start">
                                <FluentCard Height="300" AreaRestricted="true" MinimalStyle="true"
                                            Style="padding:0.5rem; box-shadow: 0px 3px 4px 0px rgba(0, 0, 0, .03) !important;border-radius: .75rem !important; border: 1px solid  #f1f1f4; !important;">
                                    <h4 style="padding-left: 1rem;">Badges</h4>
                                    <FluentDivider Style="width: 100%;" Role="DividerRole.Presentation"></FluentDivider>
                                    <p>Badges goes here.</p>
                                </FluentCard>
                                <FluentCard
                                    Style="padding:0.5rem; box-shadow: 0px 3px 4px 0px rgba(0, 0, 0, .03) !important;border-radius: .75rem !important; border: 1px solid  #f1f1f4; !important;">
                                    <h4 style="padding-left: 1rem;">Attendance Activity</h4>
                                    <FluentDivider Style="width: 100%;" Role="DividerRole.Presentation"></FluentDivider>
                                    <div style="margin-top: 1rem;">
                                        @if (AttendanceActivities.Count == 0)
                                        {
                                            <div style="text-align:center;">
                                                <h5>
                                                    😟 No attendance activity yet.
                                                </h5>
                                            </div>
                                        }
                                        @foreach (var attendance in AttendanceActivities)
                                        {
                                            <FluentStack Orientation="Orientation.Horizontal"
                                                         VerticalAlignment="VerticalAlignment.Center"
                                                         HorizontalAlignment="HorizontalAlignment.Center"
                                                         HorizontalGap="1"
                                                         VerticalGap="0" style="padding-top:5px;">
                                                <FluentStack Width="100px" Orientation="Orientation.Vertical"
                                                             VerticalAlignment="VerticalAlignment.Center"
                                                             HorizontalAlignment="HorizontalAlignment.Center"
                                                             VerticalGap="1">
                                                    <FluentCard Width="55px"
                                                                Style="border:1px solid rgba(255,111,30,.2); padding:0;
                                                                 text-align:center; margin-bottom:10px;">
                                                        <div
                                                            style="background-color:#fff5ef; color:#ff6f1e; padding:2px;">
                                                            <h6>@attendance.ActivityDate.ToString("MMM")</h6>
                                                        </div>
                                                        <FluentDivider Style="border-color:#ff6f1e"
                                                                       Role="DividerRole.Separator"
                                                                       Orientation="Orientation.Horizontal"></FluentDivider>
                                                        <h4>@attendance.ActivityDate.Day</h4>
                                                    </FluentCard>
                                                </FluentStack>
                                                <FluentStack Style="@attendance.NotCurrentDayStyle"
                                                             Orientation="Orientation.Vertical"
                                                             HorizontalAlignment="HorizontalAlignment.Start"
                                                             VerticalAlignment="VerticalAlignment.Center"
                                                             VerticalGap="1" HorizontalGap="1">
                                                    @if (attendance.IsMissedThisDay)
                                                    {
                                                        <div style="padding:1px;">
                                                            <img src="assets/media/images/absent.png"
                                                                 style="width:100px;" alt="missed"/>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <FluentStack Orientation="Orientation.Vertical" VerticalGap="1"
                                                                     VerticalAlignment="VerticalAlignment.Center"
                                                                     HorizontalAlignment="HorizontalAlignment.Start"
                                                                     Style="margin-top:1px;">
                                                            @if (attendance.TimeIn != null)
                                                            {
                                                                <div>
                                                                    <FluentButton Id="@attendance.DisplayTimeInId"
                                                                                  IconEnd="@(new Icons.Regular.Size16.CalendarCheckmark())"
                                                                                  Appearance="Appearance.Stealth">
                                                                        <FluentBadge Appearance="Appearance.Accent">
                                                                            @attendance.DisplayTimeIn
                                                                        </FluentBadge>
                                                                    </FluentButton>
                                                                    <FluentTooltip Anchor="@attendance.DisplayTimeInId"
                                                                                   HideTooltipOnCursorLeave="true"
                                                                                   Position=TooltipPosition.Top
                                                                                   Delay=200>Time In
                                                                    </FluentTooltip>
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div>
                                                                    <FluentButton
                                                                        Disabled="@(!attendance.IsCurrentDay)"
                                                                        IconEnd="@(new Icons.Regular.Size16.ClockAlarm())"
                                                                        Appearance="Appearance.Accent">
                                                                        Sign in
                                                                    </FluentButton>
                                                                </div>
                                                            }

                                                            @if (attendance is { TimeIn: not null, TimeOut: null })
                                                            {
                                                                <div>
                                                                    <FluentButton
                                                                        IconEnd="@(new Icons.Regular.Size16.ClockAlarm())"
                                                                        Appearance="Appearance.Outline" Color="darkred">
                                                                        Sign out
                                                                    </FluentButton>
                                                                </div>
                                                            }
                                                            @if (attendance.TimeOut != null)
                                                            {
                                                                <div>
                                                                    <FluentButton Id="@attendance.DisplayTimeOutId"
                                                                                  Color="green"
                                                                                  Style="font-weight:bold;"
                                                                                  IconEnd="@(new Icons.Regular.Size16.CalendarCheckmark())"
                                                                                  Appearance="Appearance.Stealth">
                                                                        <FluentBadge Appearance="Appearance.Accent">
                                                                            @attendance.DisplayTimeOut
                                                                        </FluentBadge>
                                                                    </FluentButton>
                                                                    <FluentTooltip Anchor="@attendance.DisplayTimeOutId"
                                                                                   HideTooltipOnCursorLeave="true"
                                                                                   Position=TooltipPosition.Top
                                                                                   Delay=200>Time Out
                                                                    </FluentTooltip>
                                                                </div>
                                                            }
                                                        </FluentStack>
                                                    }
                                                </FluentStack>
                                                <FluentStack Orientation="Orientation.Horizontal"
                                                             HorizontalAlignment="HorizontalAlignment.Start">
                                                    @if (attendance.IsPresent)
                                                    {
                                                        <span style="font-size:2.5rem;">🎉</span>
                                                    }
                                                </FluentStack>
                                            </FluentStack>
                                            <FluentDivider Orientation="Orientation.Horizontal"
                                                           Role="DividerRole.Separator">

                                            </FluentDivider>
                                        }
                                    </div>
                                </FluentCard>
                            </FluentStack>

                        </FluentGridItem>
                        <FluentGridItem xs="12" sm="8">
                            <Feeds></Feeds>
                        </FluentGridItem>

                    </FluentGrid>
                </FluentTab>
                <FluentTab Label="Teams" Id="tab-2" DeferredLoading="true">
                    <LoadingContent>
                        <FluentProgressRing/>
                    </LoadingContent>
                    <Content>
                        <div style="padding:10px;min-width:800px">
                            <FluentToolbar id="toolbar-fluent-components-two" style="width:100%">
                                <label style="font-size:large; padding-left:10px;" slot="label">Adventurers</label>
                                <FluentBadge>21 members</FluentBadge>

                                <FluentSearch slot="end" Placeholder="Search name" AutoComplete="off"/>
                                <FluentIcon Value="@(new Icons.Filled.Size16.Globe())" Slot="end" Color="Color.Accent"/>
                            </FluentToolbar>
                        </div>
                        <FluentGrid Spacing="3" Justify="JustifyContent.FlexStart" AdaptiveRendering="true">
                            @foreach (var user in Profiles)
                            {
                                <FluentGridItem xs="6" sm="3" Justify="JustifyContent.Center" AdaptiveRendering="true">
                                    <FluentCard Class="card-shadow card-radius"
                                                Style="box-shadow: 0px 3px 4px 0px rgba(0, 0, 0, .03) !important;border-radius: .75rem !important; border: 1px solid  #f1f1f4; !important; align-items:center;display:flex;flex-direction:column;">
                                        <FluentPersona Name=""
                                                       Status="PresenceStatus.Available"
                                                       StatusSize="PresenceBadgeSize.Small"
                                                       StatusTitle="available"
                                                       Initials="@user.Initials"
                                                       Image="@user.GetAvatar"
                                                       ImageSize="75px">
                                        </FluentPersona>
                                        <p style="text-align:center; font-weight:500;">
                                            @user.FullName
                                            <br/>
                                            <code style="color:#333333;">@(user.JobTitle ?? "N/A")</code>
                                        </p>
                                        <FluentButton Appearance="Appearance.Outline"
                                                      OnClick="() => OpenSendThankYouModalAsync(user)">
                                            Acknowledge 🪙🎉
                                        </FluentButton>
                                    </FluentCard>
                                </FluentGridItem>
                            }
                        </FluentGrid>
                    </Content>
                </FluentTab>
                <FluentTab Label="Activity" Id="tab-3" DeferredLoading="true">
                    <FluentGridItem xs="12" sm="8">
                        <FluentCard MinimalStyle="true"
                                    Style="padding:0.5rem; box-shadow: 0px 3px 4px 0px rgba(0, 0, 0, .03) !important;border-radius: .75rem !important; border: 1px solid  #f1f1f4; !important;"
                                    Class="p-card">
                            @if (IsLoadingData)
                            {
                                <FluentProgressRing Width="22px" Stroke="ProgressStroke.Small"/>
                            }
                            else
                            {
                                <h4 style="padding-left: 1rem;">
                                    @ProfileResponse?.FirstName's Quests
                                </h4>
                            }
                            <FluentDivider Style="width: 100%;" Role="DividerRole.Separator"></FluentDivider>
                            <div style="margin-top: 1rem;">
                                @foreach (var completedQuest in CompletedQuests)
                                {
                                    <FluentStack Orientation="Orientation.Horizontal"
                                                 VerticalAlignment="VerticalAlignment.Center"
                                                 HorizontalAlignment="HorizontalAlignment.Start" HorizontalGap="2"
                                                 VerticalGap="2">
                                        <FluentDivider Style="height:68px;border:1px solid #1b6ec2"
                                                       Role="DividerRole.Separator"
                                                       Orientation="Orientation.Vertical"></FluentDivider>
                                        <FluentStack Orientation="Orientation.Vertical" VerticalGap="1"
                                                     HorizontalAlignment="HorizontalAlignment.Start">
                                                <span>
                                                    <FluentBadge Appearance="Appearance.Accent" Circular="true">
                                                        @completedQuest.QuestGroup
                                                    </FluentBadge>
                                                    @completedQuest.QuestName
                                                </span>
                                            <div>
                                                    <span style="font-size:smaller; color: grey; ">
                                                        @completedQuest.CompletionDateDisplay
                                                        <FluentBadge Appearance="Appearance.Neutral" Circular="true">
                                                            🪙@completedQuest.QuestPoints 
                                                        </FluentBadge>
                                                    </span>
                                                <p style="font-size:smaller;">
                                                    @completedQuest.QuestDescription
                                                </p>
                                            </div>
                                        </FluentStack>
                                    </FluentStack>
                                }
                            </div>
                        </FluentCard>
                    </FluentGridItem>
                </FluentTab>
            </FluentTabs>
        </div>
    </FluentGridItem>

</FluentGrid>


